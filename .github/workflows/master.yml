#### Learning Yaml to become DevOps unbeatable Person in the Industry:
####  Phase 1 -- Foundations (YAML + Github Actions Basics)
# name: Abdul Hadi
# level: beginner

# skills:
#   - CI/CD 
#   - Docker
#   - Kubernetes

# student:
#   name: Abdul Bari
#   goals:
#     - master CI/CD 
#     - learn Kubernetes 


# defaults: &defaults
#   runs-on: ubuntu-latest 
#   timeout-minutes: 10

# job1:
#   <<: *defaults

# Script 1: Print the single line when push on master branch
# name: Hello workflow

# This below line is neccessary in every script:
on:
  push:
    branches: [master]
  workflow_dispatch: {}



# jobs:
#   say-hello:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Print Hello 
#         run: echo "Hello DevOps Master 🚀"

####  Script 2: 
## Update workflows:
## In this workflow: it install python and it run python file 
# jobs:
#   run-python:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4 
#       - uses: actions/setup-python@v5
#         with:
#           python-version: "3.13"
#       - run: python main.py
    
## ✅ You just automated running Python in GitHub Actions.

### Script 3:
#### Add Multiple Jobs + Dependencies
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "Script 3"
#       - run: echo "Building Project...."

#   test:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - run: echo "Running tests after build..."
### Understand needs: (job dependencies)

#### Script 4:
## Artifacts:
# Create a dummy file:
#       - run: echo "Build result" > result.txt
#       - uses: actions/upload-artifact@v4
#         with:
#           name: result
#           path: result.txt 
# # In another job:
#       - uses: actions/download-artifact@v4
#         with: 
#           name: result
#       - run: cat result.txt 
# Learn to pass files between jobs

## ## Conditionals and Branch Filters
###### Script 5
# jobs:
#   deploy-qa:  # name of this job (anything we can write)
#     runs-on: ububtu-latest  
#     # Conditionals. This job only runs if the branch is dev. 
#     # Example: 
#       # - Push to main → ❌ won’t run.
#       # Push to dev → ✅ runs.
#     `if`: github.ref == 'refs/heads/dev'   # remove brakets `` while running the script
#     steps:
#       - run: echo "Deploying the QA"
      
#### 5 Practice Script Ideas (to make you sharp)
### Here are incremental exercises you can try. Each one builds a DevOps skill.
## Hello Workflow with Conditions
# Write a workflow that:
# - Runs on every push.
# - Print different messages depending on the branch

# jobs:
#   greet:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Sctipt One
#         run: echo "Hello Workflow with Conditions"
#       - run: echo "Hello from ${{ github.ref }}"    # github.ref show which branch name

### 2️⃣ Python Script with Artifact
### Have a Python script generate.py:
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v5
#         with:
#           python-version: "3.13"
#       - run: python generate.py
#       - uses: actions/upload-artifact@v4
#         with:
#           name: report
#           path: report.txt
# Practice: creating, saving, downloading artifacts.

#### 3. Multu-Job Workflow (Build → Test)
### - First job: "build" → create a file output.txt
### - Second job: "test" → download the file and print its content.
jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Build Output" > output.txt
      - uses: actions/upload-artifact@v4
        with:
          name: output
          path: output.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: output
      - run: cat output.txt
